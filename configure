#!/bin/sh

printHelp() 
{
    echo "   Available parameters :" 
    echo
    echo "   --host= : Host architecture."
    echo "   --enable-glib : Enable glib support (edleak)"

}

ARCH=""
HOST_OS=""
HOST_TOOLCHAIN="glibc"
LDLIB_DL="dl"
LDLIB_PTHREAD="pthread"

SUPPORT_GLIB="no"
CPPFLAGS_GLIB=""
LDFLAGS_GLIB=""

LIBJSONC="json-c-0.9"

rm -f configure.in

for i in $*
do
   case $i in
      --host=*)
         ARCH=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
      ;;

      --enable-glib)
         SUPPORT_GLIB="yes"
      ;;

      *)
         printHelp
         exit
      ;;
   esac
done

if [ "$ARCH" = "" ] ; then
   HOST_OS=`uname`
   case $HOST_OS in
      Linux)
         HOST_OS="linux"
      ;;

      Haiku)
         HOST_OS="linux"
      ;;

      *)
         echo "Unknown host: $HOST_OS."
         printHelp
         exit
      ;;
   esac
else
# check host OS
   case $ARCH in
      *linux*)
         HOST_OS="linux"
      ;;

      *)
         echo "Unknown host : $HOST."
         printHelp
         exit
      ;;
   esac

# check host libc
   case $HOST in
      *uclibc*)
         HOST_TOOLCHAIN="uclibc"
      ;;
   esac
fi

echo "Host operating system is $HOST_OS"
echo "Host libc is $HOST_TOOLCHAIN"

# create configure.in
echo "export OS=$HOST_OS" > configure.in
echo "export ARCH=$ARCH" >> configure.in
echo "export LDLIB_DL=$LDLIB_DL" >> configure.in
echo "export LDLIB_PTHREAD=$LDLIB_PTHREAD" >> configure.in
echo "export SUPPORT_GLIB=$SUPPORT_GLIB" >> configure.in

if [ "$SUPPORT_GLIB" = "yes" ] ; then
CPPFLAGS_GLIB=`pkg-config glib-2.0 --cflags`
LDFLAGS_GLIB=`pkg-config glib-2.0 --libs`
echo "export CPPFLAGS_GLIB=$CPPFLAGS_GLIB" >> configure.in
echo "export LDFLAGS_GLIB=$LDFLAGS_GLIB" >> configure.in
fi

#extract jsonc
CURDIR=$PWD
cd $CURDIR/src/thirdparty
tar zxpvf $LIBJSONC.tar.gz 1> /dev/null
ln -sf $LIBJSONC json-c
cd json-c 
echo "configuring jsonc..."
./configure --host=$ARCH --enable-shared=false --with-pic 1> /dev/null


